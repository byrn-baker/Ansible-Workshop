#jinja2: lstrip_blocks: "True", trim_blocks: "True"
{% set devices = nb_devices[0]["data"]["devices"] %}
{% set site = nb_sites[0]['data']['sites'] %}
{% set spines = nb_spines[0]['data']['devices'] %}
{% set l3leafs = nb_l3leafs[0]['data']['devices'] %}
{% set borderleafs = nb_borderleafs[0]['data']['devices'] %}
{% set l2leafs = nb_l2leafs[0]['data']['devices'] %}
---
# L3LS Fabric Values - update these values with caution,
# SOME CHANGES COULD BE DISRUPTIVE.

fabric_name: {{ devices[0]['site']['name'] }}_FABRIC

# Set Maximum spines to allow growth to 8 spines
max_spines: 4

# Point to Point Network Summary range, assigned as /31 for each
# uplink interfaces
# Assign range larger then total [spines * total potential leafs * 2]
{% for prefix in site[0]['prefixes'] %}
{%  if 'underlay_p2p' in prefix['role']['name']%}
underlay_p2p_network_summary: {{ prefix['prefix'] }}
{%  endif %}
{% endfor %}

# IP address range for evpn loopback for all switches in fabric,
# assigned as /32s
# Assign range larger then total spines + total leafs switches
{% for prefix in site[0]['prefixes'] %}
{%  if 'overlay' in prefix['role']['name']%}
overlay_loopback_network_summary: {{ prefix['prefix'] }}
{%  endif %}
{% endfor %}

# VTEP VXLAN Tunnel source loopback IP for leaf switches, assigned in /32s
# Assign range larger then total leaf switches
{% for prefix in site[0]['prefixes'] %}
{%  if 'vtep' in prefix['role']['name']%}
vtep_loopback_network_summary: {{ prefix['prefix'] }}
{%  endif %}
{% endfor %}

# mlag pair IP assignment - assign blocks - Assign range larger then
# total leafs switches
mlag_ips:
{% for prefix in site[0]['prefixes'] %}
{%  if 'leaf_peer_p2p' in prefix['role']['name']%}
  leaf_peer_l3: {{ prefix['prefix'] }}
{%  endif %}
{% endfor %}
{% for prefix in site[0]['prefixes'] %}
{%  if 'mlag_peer_p2p' in prefix['role']['name']%}
  mlag_peer: {{ prefix['prefix'] }}
{%  endif %}
{% endfor %}

# Enable vlan aware bundles
vxlan_vlan_aware_bundles: true

# Disable EVPN host-flap protection
evpn_hostflap_detection:
  enabled: false
  threshold: 30

# Set short_esi prefix to non-default value
evpn_short_esi_prefix: "0000:1234:"

# bgp peer groups passwords
bgp_peer_groups:
  IPv4_UNDERLAY_PEERS:
    password: "AQQvKeimxJu+uGQ/yYvv9w=="
  EVPN_OVERLAY_PEERS:
    password: "q+VNViP5i4rVjW1cxFv2wA=="
  MLAG_IPv4_UNDERLAY_PEER:
    password: "vnEaG8gMeQf3d3cN6PktXQ=="

# Spine Switches
spine:
  {# defaults:
{% for prefix in site[0]['prefixes'] %}
{%  if 'overlay' in prefix['role']['name']%}
    loopback_ipv4_pool: {{ prefix['prefix'] }}
{%  endif %}
{% endfor %}
{% for prefix in site[0]['prefixes'] %}
{%  if 'vtep' in prefix['role']['name']%}
    vtep_loopback_ipv4_pool: {{ prefix['prefix'] }}
{%  endif %}
{% endfor %} #}
{% for spine in spines %}
{%  if 'spine1' in spine['name'] %}
  platform: {{ spine['platform']['name'] }}
  bgp_as: {{ spine['local_asn'] }}
{%   endif %}
{% endfor %}
  # defines the range of acceptable remote ASNs from leaf switches
  leaf_as_range: 65101-65132
  nodes:
{% for spine in spines %}
{% set dc = spine['site']['name'].lower %}
    {{ spine['name'] }}:
      id: {{ spine['name'] | regex_replace ('dc[1-9]-spine', '') }}
{%   for iface in spine['interfaces'] %}
{%     if iface['name'] == 'Management1' %}
{%       for addr in iface['ip_addresses'] %}
      mgmt_ip: {{ addr['address'] }}
      mac_address: {{ iface['mac_address']}}
{%       endfor %}      
{%     endif %}
{%   endfor %}
{% endfor %}

# Leaf switch groups
# A maximum of two nodes can form a leaf group
# When two nodes are in a leaf group this will automatically form mlag pair

{% if 'l3leaf' in l3leafs[0]['device_role']['name']%}
l3leaf:
  defaults:
{% for leaf in l3leafs %}
{%   if 'leaf1' in leaf['name']%}
    virtual_router_mac_address: {{ leaf["viritual_router_mac"]}}
    platform: {{ leaf['platform']['name'] }}
{%   endif %}
{% endfor %}
    spines: [{{ spines | join(', ', attribute='name')}}]
    uplink_to_spine_interfaces:
{% for interface in l3leafs[0]['interfaces'] %}
{%   if interface['role'] == 'spine' %}
      - {{ interface['name'] }}
{%   endif %}
{% endfor %}
    mlag_interfaces:
{% for interface in l3leafs[0]['interfaces'] %}
{%   if interface['role'] == 'mlag' %}
      - {{ interface['name'] }}
{%   endif %}
{% endfor %}
    mlag_peer_l3_vlan: 4093
    mlag_peer_vlan: 4094
    spanning_tree_priority: 4096
    spanning_tree_mode: mstp
{# {% for prefix in site[0]['prefixes'] %}
{%  if 'overlay' in prefix['role']['name']%}
    loopback_ipv4_pool: {{ prefix['prefix'] }}
{%   endif %}
{% endfor %}
{% for prefix in site[0]['prefixes'] %}
{%  if 'vtep' in prefix['role']['name']%}
    vtep_loopback_ipv4_pool: {{ prefix['prefix'] }}
{%   endif %}
{% endfor %}
{% for prefix in site[0]['prefixes'] %}
{%   if 'mlag_peer_p2p' in prefix['role']['name']%}
    mlag_peer_ipv4_pool: {{ prefix['prefix'] }}
{%   endif %}
{% endfor %}
{% for prefix in site[0]['prefixes'] %}
{%   if 'leaf_peer_p2p' in prefix['role']['name']%}
    mlag_peer_l3_ipv4_pool: {{ prefix['prefix'] }}
{%   endif %}
{% endfor %} #}
  node_groups:
{% for leaf in l3leafs %}
{%   if 'leaf1' in leaf['name'] %}
    {{ leaf['site']['name'] }}_LEAF1:
      platform: {{ leaf['platform']['name'] }}
      bgp_as: {{ leaf['local_asn'] }}
{%   endif %}
{% endfor %}
      nodes:
{% for leaf in l3leafs %}
{%   if 'leaf1' in leaf['name'] or 'leaf2' in leaf['name'] %}
{%     set dc = leaf['site']['name'].lower %}
        {{ leaf['name'] }}:
          id: {{ leaf['name'] | regex_replace ('dc[1-9]-leaf', '') }}
          rack: {{ leaf['rack']['name'] }}
{%     for iface in leaf['interfaces'] %}
{%       if iface['name'] == 'Management1' %}
{%         for addr in iface['ip_addresses'] %}
          mgmt_ip: {{ addr['address'] }}
          mac_address: {{ iface['mac_address'] }}
{%         endfor %}
{%       endif %}
{%     endfor %}
          spine_interfaces:
{%     for iface in leaf['interfaces'] %}
{%       if iface['role'] != None and iface['role'] == 'spine' %}
            - {{ iface['connected_interface']['name'] }}
{%       endif %}
{%     endfor %}
          uplink_to_spine_interfaces:
{%     for iface in leaf['interfaces'] %}
{%       if iface['role'] != None and iface['role'] == 'spine' %}
            - {{ iface['name'] }}
{%       endif %}
{%     endfor %}
{%    endif %}
{% endfor %}
{% for leaf in l3leafs %}
{%   if 'leaf3' in leaf['name'] %}
    {{ leaf['site']['name'] }}_LEAF2:
      bgp_as: {{ leaf['local_asn'] }}
      nodes:
{%   endif %}
{% endfor %}
{%  for leaf in l3leafs %}
{%   if 'leaf3' in leaf['name'] or 'leaf4' in leaf['name'] %}
{%     set dc = leaf['site']['name'].lower %}
        {{ leaf['name'] }}:
          id: {{ leaf['name'] | regex_replace ('dc[1-9]-leaf', '') }}
{%     for iface in leaf['interfaces'] %}
{%       if iface['name'] == 'Management1' %}
{%         for addr in iface['ip_addresses'] %}
          mgmt_ip: {{ addr['address'] }}
{%         endfor %}
{%       endif %}
{%     endfor %}
          spine_interfaces:
{%     for iface in leaf['interfaces'] %}
{%       if iface['role'] == 'spine' %}
            - {{ iface['connected_interface']['name'] }}
{%       endif %}
{%     endfor %}
          uplink_to_spine_interfaces:
{%     for iface in leaf['interfaces'] %}
{%       if iface['role'] != None and iface['role'] == 'spine' %}
            - {{ iface['name'] }}
{%       endif %}
{%     endfor %}
{%   endif %}
{%  endfor %}
{% endif %}
{% if 'l2leaf' in l2leafs[0]['device_role']['name']%}
l2leaf:
  defaults:
{%  for leaf in l2leafs %}
{%    if 'leaf1' in leaf['name']%}
    platform: {{ leaf['platform']['name'] }}
{%    endif %}
{%  endfor %}
    parent_l3leafs: [ {{ l3leafs | join(', ', attribute='name')}} ]
    uplink_interfaces:
{% for interface in l2leafs[0]['interfaces'] %}
{%   if interface['role'] == 'l3leaf' %}
      - {{ interface['name'] }}
{%   endif %}
{% endfor %}
    mlag_interfaces:
{% for interface in l2leafs[0]['interfaces'] %}
{%   if interface['role'] == 'mlag' %}
      - {{ interface['name'] }}
{%   endif %}
{% endfor %}
    spanning_tree_mode: mstp
    spanning_tree_priority: 16384
  node_groups:
{% for leaf in l2leafs %}
{%   if 'leaf1' in leaf['name'] %}
    {{ leaf['site']['name'] }}_L2LEAF1:
      parent_l3leafs:
{%     for iface in leaf['interfaces'] %}
{%       if iface['role'] == 'l3leaf' %}
        - {{ iface['connected_interface']['device']['name'] }}
{%       endif %}
{%     endfor %}
{%   endif %}
{% endfor%}
      nodes:
{%  for leaf in l2leafs %}
{%     if 'leaf1' in leaf['name'] %}
{%     set dc = leaf['site']['name'].lower %}
        {{ leaf['name'] }}:
          id: {{ leaf['name'] | regex_replace ('dc[1-9]-l2leaf', '') }}
{%       for iface in leaf['interfaces'] %}
{%         if iface['name'] == 'Management1' %}
{%           for addr in iface['ip_addresses'] %}
          mgmt_ip: {{ addr['address'] }}
          mac_address: {{ iface['mac_address'] }}
{%           endfor %}
{%         endif %}
{%       endfor %}
          l3leaf_interfaces:
{%       for iface in leaf['interfaces'] %}
{%         if iface['role'] == 'l3leaf' %}
            - {{ iface['connected_interface']['name'] }}
{%         endif %}
{%       endfor %}
{%     endif %}
{%     if 'leaf2' in leaf['name'] %}
    {{ leaf['site']['name'] }}_L2LEAF2:
      parent_l3leafs:
{%       for iface in leaf['interfaces'] %}
{%         if iface['role'] == 'l3leaf' %}
        - {{ iface['connected_interface']['device']['name'] }}
{%         endif %}
{%       endfor %}
{%     endif %}
{%   endfor%}
{%   for leaf in l2leafs %}
{%     if 'leaf2' in leaf['name'] %}
      nodes:
{%     set dc = leaf['site']['name'].lower %}
        {{ leaf['name'] }}:
          id: {{ leaf['name'] | regex_replace ('dc[1-9]-l2leaf', '') }}
{%       for iface in leaf['interfaces'] %}
{%         if iface['name'] == 'Management1' %}
{%           for addr in iface['ip_addresses'] %}
          mgmt_ip: {{ addr['address'] }}
{%           endfor %}
{%         endif %}
{%       endfor %}
          l3leaf_interfaces:
{%       for iface in leaf['interfaces'] %}
{%         if iface['role'] == 'l3leaf' %}
            - {{ iface['connected_interface']['name'] }}
{%         endif %}
{%       endfor %}
{%     endif %}
{%   endfor %}
{% endif %}


#### Override for vEOS Lab Caveats ####

# Disable update wait-for-convergence and update wait-for-install, which is not supported in vEOS-LAB.

spine_bgp_defaults:
#  - update wait-for-convergence
#  - update wait-install
  - no bgp default ipv4-unicast
  - distance bgp 20 200 200

leaf_bgp_defaults:
#  - update wait-install
  - no bgp default ipv4-unicast
  - distance bgp 20 200 200

# Upodate p2p mtu 9000 -> 1500
p2p_uplinks_mtu: 1500

# Adjust default bfd values
bfd_multihop:
  interval: 1200
  min_rx: 1200
  multiplier: 3

custom_structured_configuration_prefix: [ 'my_dci_', 'my_special_dci_', 'override_' ]

# Set Hardware Speed Groups per platform
platform_speed_groups:
  7280R:             # Only setting speed-groups on 7280R platform, so only L3leaf should get this setting.
    25G: [ 3, 2 ]    # Unsorted order, but we should sort output correctly.
    10G: [ 1, 2, 4 ] # Duplicate speed-group 2. Since we sort on key first the result will be 25G for group 2